import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -defaultplatform com.armax.datamodels 1.0 imports'

Module {
    dependencies: ["QtQuick 2.7"]
    Component {
        name: "Armax::Datamodels::AbstractListItem"
        prototype: "QObject"
        Property { name: "isSelected"; type: "bool" }
        Signal {
            name: "dataChanged"
            Parameter { name: "role"; type: "int" }
        }
        Signal { name: "dataChanged" }
        Signal {
            name: "isSelectedChanged"
            Parameter { name: "isSelected"; type: "bool" }
        }
        Method { name: "saved" }
    }
    Component {
        name: "Armax::Datamodels::AbstractQueue"
        prototype: "QObject"
        exports: ["com.armax.datamodels/XFifo 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal { name: "queueFull" }
        Signal { name: "queueEmpty" }
        Signal { name: "itemEnqueded" }
        Signal { name: "itemDequeuded" }
        Signal { name: "sizeChanged" }
    }
    Component {
        name: "Armax::Datamodels::Lifo"
        prototype: "Armax::Datamodels::AbstractQueue"
        exports: ["com.armax.datamodels/XLifo 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal { name: "lifoFull" }
        Signal { name: "lifoEmpty" }
        Signal { name: "sizeChanged" }
    }
    Component {
        name: "Armax::Datamodels::ListModel"
        prototype: "QAbstractItemModel"
        exports: ["com.armax.datamodels/XListModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "size"; type: "int"; isReadonly: true }
        Property { name: "selectedIndex"; type: "int" }
        Property { name: "selectedItem"; type: "AbstractListItem"; isPointer: true }
        Signal { name: "rowCountChanged" }
        Signal {
            name: "rowsMoved"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "find"
            type: "AbstractListItem*"
            Parameter { name: "toFind"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method { name: "resetSelection" }
        Method { name: "count"; type: "int" }
        Method { name: "size"; type: "int" }
        Method {
            name: "moveRow"
            type: "bool"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "get"
            type: "QObject*"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "Armax::Datamodels::SortFilterProxyModel"
        prototype: "QSortFilterProxyModel"
        exports: ["com.armax.datamodels/XSortFilterProxyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "filterFixedString"; type: "string" }
        Property { name: "sortRole"; type: "int" }
        Method {
            name: "indexToSource"
            type: "int"
            Parameter { name: "proxyIndex"; type: "int" }
        }
        Method { name: "emitLayoutChangedSignal" }
    }
    Component {
        name: "Armax::Datamodels::TreeModel"
        prototype: "QAbstractItemModel"
        exports: ["com.armax.datamodels/XTreeModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "selectedIndex"; type: "QModelIndex" }
        Method {
            name: "getObject"
            type: "QObject*"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "isIndexValid"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "parentsObjects"
            type: "QList<QObject*>"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "parentsCount"
            type: "int"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method { name: "rootIndex"; type: "QModelIndex" }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        name: "Armax::Datamodels::TreeSortFilterProxyModel"
        prototype: "Armax::Datamodels::SortFilterProxyModel"
        exports: ["com.armax.datamodels/XTreeSortFilterProxyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "indexToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "indexFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
}
