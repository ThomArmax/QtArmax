import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable com.armax.controls 1.0'

Module {
    Component {
        name: "XCheckablePrivate"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["com.armax.controls.private/XCheckablePrivate 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XButton"
        exports: ["com.armax.controls/XButton 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "fontColor"; type: "QColor" }
        Property { name: "fontColorWhenDisabled"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Property { name: "colorWhenDefault"; type: "QColor" }
        Property { name: "colorWhenPressed"; type: "QColor" }
        Property { name: "colorWhenChecked"; type: "QColor" }
        Property { name: "colorWhenHovered"; type: "QColor" }
        Property { name: "colorWhenDisabled"; type: "QColor" }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColorWhenDefault"; type: "QColor" }
        Property { name: "borderColorWhenPressed"; type: "QColor" }
        Property { name: "borderColorWhenHovered"; type: "QColor" }
        Property { name: "borderColorWhenChecked"; type: "QColor" }
        Property { name: "borderColorWhenDisabled"; type: "QColor" }
        Property { name: "gradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenPressed"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenChecked"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenHovered"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "radius"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "animationDuration"; type: "double" }
        Property { name: "icon"; type: "QUrl" }
        Property { name: "spacing"; type: "int" }
        Property { name: "margins"; type: "int" }
        Property { name: "text"; type: "string" }
        Property { name: "textElement"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "textHAlignment"; type: "int" }
        Property { name: "textVAlignment"; type: "int" }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "layout"; type: "QQuickRow"; isReadonly: true; isPointer: true }
        Property { name: "exclusiveGroup"; type: "QQuickExclusiveGroup"; isPointer: true }
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XCheckBox"
        exports: ["com.armax.controls/XCheckBox 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "colorWhenDefault"; type: "QColor" }
        Property { name: "colorWhenDisabled"; type: "QColor" }
        Property { name: "handleColorWhenChecked"; type: "QColor" }
        Property { name: "handleColorWhenDisabled"; type: "QColor" }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColorWhenDefault"; type: "QColor" }
        Property { name: "borderColorWhenDisabled"; type: "QColor" }
        Property { name: "handleBorderColorWhenChecked"; type: "QColor" }
        Property { name: "handleBorderColorWhenDisabled"; type: "QColor" }
        Property { name: "gradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenChecked"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "radius"; type: "int" }
        Property { name: "checkboxWidth"; type: "int" }
        Property { name: "checkboxHeight"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "label"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "exclusiveGroup"; type: "QQuickExclusiveGroup"; isPointer: true }
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XCheckable"
        exports: ["com.armax.controls/XCheckable 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "exclusiveGroup"; type: "QQuickExclusiveGroup"; isPointer: true }
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XCircularProgress"
        exports: ["com.armax.controls/XCircularProgress 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "progress"; type: "int" }
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "backgoundColor"; type: "QColor" }
        Property { name: "backgroundGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "progressColor"; type: "QColor" }
        Property { name: "progressGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColor"; type: "QColor" }
        Property { name: "fontColor"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Property { name: "backgroundLineSize"; type: "int" }
        Property { name: "progressLineSize"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "text"; type: "string" }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XProgressBar"
        exports: ["com.armax.controls/XProgressBar 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "progress"; type: "int" }
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "radius"; type: "int" }
        Property { name: "backgoundColor"; type: "QColor" }
        Property { name: "backgroundGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "progressColor"; type: "QColor" }
        Property { name: "progressGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColor"; type: "QColor" }
        Property { name: "fontColor"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "showProgress"; type: "bool" }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XRadioButton"
        exports: ["com.armax.controls/XRadioButton 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "colorWhenDefault"; type: "QColor" }
        Property { name: "colorWhenDisabled"; type: "QColor" }
        Property { name: "handleColorWhenChecked"; type: "QColor" }
        Property { name: "handleColorWhenDisabled"; type: "QColor" }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColorWhenDefault"; type: "QColor" }
        Property { name: "borderColorWhenDisabled"; type: "QColor" }
        Property { name: "handleBorderColorWhenChecked"; type: "QColor" }
        Property { name: "handleBorderColorWhenDisabled"; type: "QColor" }
        Property { name: "gradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenChecked"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "radioButtonWidth"; type: "int" }
        Property { name: "radioButtonHeight"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "label"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "exclusiveGroup"; type: "QQuickExclusiveGroup"; isPointer: true }
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XSlider"
        exports: ["com.armax.controls/XSlider 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "minValue"; type: "double" }
        Property { name: "maxValue"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "decimals"; type: "int" }
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "radius"; type: "int" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "backgroundGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "colorWhenDefault"; type: "QColor" }
        Property { name: "colorWhenPressed"; type: "QColor" }
        Property { name: "colorWhenHovered"; type: "QColor" }
        Property { name: "colorWhenDisabled"; type: "QColor" }
        Property { name: "handleColorWhenDefault"; type: "QColor" }
        Property { name: "handleColorWhenPressed"; type: "QColor" }
        Property { name: "handleColorWhenHovered"; type: "QColor" }
        Property { name: "handleColorWhenDisabled"; type: "QColor" }
        Property { name: "handleBorderColorWhenDefault"; type: "QColor" }
        Property { name: "handleBorderColorWhenPressed"; type: "QColor" }
        Property { name: "handleBorderColorWhenHovered"; type: "QColor" }
        Property { name: "handleBorderColorWhenDisabled"; type: "QColor" }
        Property { name: "progressColor"; type: "QColor" }
        Property { name: "progressGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColorWhenDefault"; type: "QColor" }
        Property { name: "borderColorWhenPressed"; type: "QColor" }
        Property { name: "borderColorWhenHovered"; type: "QColor" }
        Property { name: "borderColorWhenDisabled"; type: "QColor" }
        Property { name: "gradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenPressed"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenHovered"; type: "QQuickGradient"; isPointer: true }
        Property { name: "gradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenPressed"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenHovered"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "showValue"; type: "bool" }
        Property { name: "fontColor"; type: "QColor" }
        Property { name: "fontColorWhenDisabled"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
    }
    Component {
        prototype: "QQuickItem"
        name: "com.armax.controls/XToggleSwitch"
        exports: ["com.armax.controls/XToggleSwitch 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "style"; type: "XStyle_QMLTYPE_0"; isPointer: true }
        Property { name: "radius"; type: "int" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "backgroundColorWhenDisabled"; type: "QColor" }
        Property { name: "handleColorWhenDefault"; type: "QColor" }
        Property { name: "handleColorWhenPressed"; type: "QColor" }
        Property { name: "handleColorWhenHovered"; type: "QColor" }
        Property { name: "handleColorWhenDisabled"; type: "QColor" }
        Property { name: "backgroundGradient"; type: "QQuickGradient"; isPointer: true }
        Property { name: "backgroundGradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenChecked"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDefault"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenPressed"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenHovered"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleGradientWhenDisabled"; type: "QQuickGradient"; isPointer: true }
        Property { name: "handleBorderColorWhenDefault"; type: "QColor" }
        Property { name: "handleBorderColorWhenPressed"; type: "QColor" }
        Property { name: "handleBorderColorWhenHovered"; type: "QColor" }
        Property { name: "handleBorderColorWhenDisabled"; type: "QColor" }
        Property { name: "borderWidth"; type: "int" }
        Property { name: "borderColor"; type: "QColor" }
        Property { name: "borderColorWhenDisabled"; type: "QColor" }
        Property { name: "textWhenOn"; type: "string" }
        Property { name: "textWhenOff"; type: "string" }
        Property { name: "fontColorWhenOn"; type: "QColor" }
        Property { name: "fontColorWhenOff"; type: "QColor" }
        Property { name: "fontColorWhenDisabled"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Property { name: "useGradients"; type: "bool" }
        Property { name: "handleMargins"; type: "int" }
        Property { name: "exclusiveGroup"; type: "QQuickExclusiveGroup"; isPointer: true }
        Property { name: "checkable"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "hoverEnabled"; type: "bool" }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal {
            name: "hoverEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "toggled"
            Parameter { name: "toggled"; type: "bool" }
        }
        Signal {
            name: "checkedChanged"
            Parameter { name: "checked"; type: "bool" }
        }
        Signal {
            name: "checkableChanged"
            Parameter { name: "checkable"; type: "bool" }
        }
        Signal {
            name: "pressedChanged"
            Parameter { name: "pressed"; type: "bool" }
        }
        Signal {
            name: "hoveredChanged"
            Parameter { name: "hovered"; type: "bool" }
        }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "clicked" }
        Method {
            name: "setHoverEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "setPressed"
            Parameter { name: "pressed"; type: "bool" }
        }
        Method {
            name: "setChecked"
            Parameter { name: "checked"; type: "bool" }
        }
        Method {
            name: "setCheckable"
            Parameter { name: "checkable"; type: "bool" }
        }
    }
}
